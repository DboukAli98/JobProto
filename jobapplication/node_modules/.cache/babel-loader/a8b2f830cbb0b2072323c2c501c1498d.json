{"ast":null,"code":"const KEYS = {\n  jobs: 'jobs',\n  jobId: 'jobId'\n};\nexport const getCategoryCollection = () => [{\n  id: '1',\n  title: 'Software Development'\n}, {\n  id: '2',\n  title: 'Marketing'\n}, {\n  id: '3',\n  title: 'Accounting'\n}, {\n  id: '4',\n  title: 'HR'\n}];\nexport function insertJob(data) {\n  let jobs = getAllJobs();\n  data['id'] = generateJobs();\n  jobs.push(data);\n  localStorage.setItem(KEYS.jobs, JSON.stringify(jobs));\n}\nexport function generatejobsId() {\n  if (localStorage.getItem(KEYS.jobsId) == null) localStorage.setItem(KEYS.jobsId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.jobsId));\n  localStorage.setItem(KEYS.jobsId, (++id).toString());\n  return id;\n}\nexport function getAllJobs() {\n  if (localStorage.getItem(KEYS.jobs) == null) localStorage.setItem(KEYS.jobs, JSON.stringify([]));\n  let jobs = JSON.parse(localStorage.getItem(KEYS.jobs)); //map departmentID to department title\n\n  let categories = getCategoryCollection();\n  return jobs.map(x => ({ ...x,\n    categories: categories[x.categoryId - 1].title\n  }));\n}","map":{"version":3,"sources":["C:/Users/dbouk/Desktop/University/AGL/JobPortalApp/jobapplication/src/components/Search/Data/jobsData.js"],"names":["KEYS","jobs","jobId","getCategoryCollection","id","title","insertJob","data","getAllJobs","generateJobs","push","localStorage","setItem","JSON","stringify","generatejobsId","getItem","jobsId","parseInt","toString","parse","categories","map","x","categoryId"],"mappings":"AAAA,MAAMA,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,MADG;AAETC,EAAAA,KAAK,EAAE;AAFE,CAAb;AAKA,OAAO,MAAMC,qBAAqB,GAAG,MAAO,CACxC;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CADwC,EAExC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAFwC,EAGxC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAHwC,EAIxC;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAJwC,CAArC;AAOP,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,MAAIN,IAAI,GAAGO,UAAU,EAArB;AACAD,EAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaE,YAAY,EAAzB;AACAR,EAAAA,IAAI,CAACS,IAAL,CAAUH,IAAV;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,IAA1B,EAAgCY,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAhC;AACH;AAED,OAAO,SAASc,cAAT,GAA0B;AAC7B,MAAIJ,YAAY,CAACK,OAAb,CAAqBhB,IAAI,CAACiB,MAA1B,KAAqC,IAAzC,EACIN,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACiB,MAA1B,EAAkC,GAAlC;AACJ,MAAIb,EAAE,GAAGc,QAAQ,CAACP,YAAY,CAACK,OAAb,CAAqBhB,IAAI,CAACiB,MAA1B,CAAD,CAAjB;AACAN,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACiB,MAA1B,EAAkC,CAAC,EAAEb,EAAH,EAAOe,QAAP,EAAlC;AACA,SAAOf,EAAP;AACH;AAED,OAAO,SAASI,UAAT,GAAsB;AACzB,MAAIG,YAAY,CAACK,OAAb,CAAqBhB,IAAI,CAACC,IAA1B,KAAmC,IAAvC,EACIU,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,IAA1B,EAAgCY,IAAI,CAACC,SAAL,CAAe,EAAf,CAAhC;AACJ,MAAIb,IAAI,GAAGY,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACK,OAAb,CAAqBhB,IAAI,CAACC,IAA1B,CAAX,CAAX,CAHyB,CAIzB;;AACA,MAAIoB,UAAU,GAAGlB,qBAAqB,EAAtC;AACA,SAAOF,IAAI,CAACqB,GAAL,CAASC,CAAC,KAAK,EAClB,GAAGA,CADe;AAElBF,IAAAA,UAAU,EAAEA,UAAU,CAACE,CAAC,CAACC,UAAF,GAAe,CAAhB,CAAV,CAA6BnB;AAFvB,GAAL,CAAV,CAAP;AAIH","sourcesContent":["const KEYS = {\r\n    jobs: 'jobs',\r\n    jobId: 'jobId'\r\n}\r\n\r\nexport const getCategoryCollection = () => ([\r\n    { id: '1', title: 'Software Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertJob(data) {\r\n    let jobs = getAllJobs();\r\n    data['id'] = generateJobs()\r\n    jobs.push(data)\r\n    localStorage.setItem(KEYS.jobs, JSON.stringify(jobs))\r\n}\r\n\r\nexport function generatejobsId() {\r\n    if (localStorage.getItem(KEYS.jobsId) == null)\r\n        localStorage.setItem(KEYS.jobsId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.jobsId))\r\n    localStorage.setItem(KEYS.jobsId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllJobs() {\r\n    if (localStorage.getItem(KEYS.jobs) == null)\r\n        localStorage.setItem(KEYS.jobs, JSON.stringify([]))\r\n    let jobs = JSON.parse(localStorage.getItem(KEYS.jobs));\r\n    //map departmentID to department title\r\n    let categories = getCategoryCollection();\r\n    return jobs.map(x => ({\r\n        ...x,\r\n        categories: categories[x.categoryId - 1].title\r\n    }))\r\n}"]},"metadata":{},"sourceType":"module"}