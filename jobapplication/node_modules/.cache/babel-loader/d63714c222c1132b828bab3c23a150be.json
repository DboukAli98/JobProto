{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbouk\\\\Desktop\\\\University\\\\AGL\\\\JobPortalApp\\\\jobapplication\\\\src\\\\components\\\\Search\\\\TableSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nconst TableSearch = () => {\n  _s();\n\n  const classes = useStyles();\n  const [jobs, setJobs] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/jobs\");\n      const jsonData = await response.json();\n      setJobs(jsonData);\n      console.log(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        margin: \"60px\"\n      },\n      type: \"text\",\n      placeholder: \"Job Title Here\",\n      onChange: e => {\n        setSearch(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Job Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Job Type / Skills Required \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: jobs.filter(item => {\n            if (search == \"\") {\n              return item;\n            } else if (item.name.toLowerCase().includes(search.toLowerCase())) {\n              return item;\n            }\n          }).map(item => {\n            return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: item.job_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: item.comp_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: item.job_location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: item.skills\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableSearch, \"6j1szZcaT+oMQZNHeemjEm8QWtg=\", false, function () {\n  return [useStyles];\n});\n\n_c = TableSearch;\nexport default TableSearch;\n/*<MaterialTable title=\"JobsSearched\"\r\n            \r\n            />*/\n\nvar _c;\n\n$RefreshReg$(_c, \"TableSearch\");","map":{"version":3,"sources":["C:/Users/dbouk/Desktop/University/AGL/JobPortalApp/jobapplication/src/components/Search/TableSearch.js"],"names":["React","Fragment","useEffect","useState","MaterialTable","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","TableSearch","classes","jobs","setJobs","search","setSearch","getJobs","response","fetch","jsonData","json","console","log","err","error","message","margin","e","target","value","filter","item","name","toLowerCase","includes","map","job_title","comp_name","job_location","skills","id"],"mappings":"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","sourcesContent":["import React , {Fragment , useEffect , useState} from \"react\";\r\nimport MaterialTable from 'material-table';\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\n\r\n\r\n\r\n const TableSearch = () => {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [jobs , setJobs] = useState([]);\r\n    const [search , setSearch] = useState(\"\");\r\n\r\n    const getJobs = async () => {\r\n        try {\r\n\r\n            const response = await fetch(\"http://localhost:3001/jobs\");\r\n            const jsonData = await response.json();\r\n\r\n            setJobs(jsonData);\r\n            console.log(jsonData);\r\n            \r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    useEffect(() =>{\r\n        getJobs();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"table-search\">\r\n            <input style={{margin: \"60px\"}}\r\n            type=\"text\" \r\n            placeholder=\"Job Title Here\"\r\n            onChange={e => {\r\n                setSearch(e.target.value);\r\n\r\n            }}\r\n\r\n            \r\n            />\r\n            \r\n            \r\n            {/*jobs.filter(item => {\r\n                if (search == \"\") {\r\n                    return item\r\n                }\r\n                else if (item.job_title.toLowerCase().includes(search.toLowerCase())){\r\n                    return item;\r\n                }\r\n\r\n\r\n            }).\r\n            map(item => {\r\n                return <p>{item.job_title} = {item.comp_name}</p>\r\n            })*/}        \r\n\r\n<TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Job Title</StyledTableCell>\r\n              <StyledTableCell>Company Name</StyledTableCell>\r\n              <StyledTableCell>Job Location</StyledTableCell>\r\n              <StyledTableCell>Job Type / Skills Required </StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {jobs\r\n              .filter((item) => {\r\n                if (search == \"\") {\r\n                  return item;\r\n                } else if (\r\n                  item.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return item;\r\n                }\r\n              })\r\n              .map((item) => {\r\n                return (\r\n                  <StyledTableRow key={item.id}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.job_title}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.comp_name}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.job_location}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.skills}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n    \r\n};\r\nexport default TableSearch;\r\n\r\n/*<MaterialTable title=\"JobsSearched\"\r\n            \r\n            />*/"]},"metadata":{},"sourceType":"module"}